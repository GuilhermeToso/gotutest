# Development stage
FROM node:16.13.1-alpine3.14 AS production

WORKDIR /app

# Copy the project files
COPY dist/apps/gotu-backend .
COPY package*.json ./

ENV PORT=3000
EXPOSE ${PORT}

# Install dependencies
RUN npm ci --quiet --production

# Start the application
CMD ["node", "main.js"]

# This file is generated by Nx.
#
# Build the docker image with `npx nx docker-build gotu-backend`.
# Tip: Modify "docker-build" options in project.json to change docker build args.
#
# Run the container with `docker run -p 3000:3000 -t gotu-backend`.
#FROM docker.io/node:lts-alpine

#ENV HOST=0.0.0.0
#ENV PORT=3000

#WORKDIR /app

#RUN addgroup --system gotu-backend && \
#          adduser --system -G gotu-backend gotu-backend

#COPY dist/apps/gotu-backend gotu-backend
#COPY package*.json gotu-backend
#RUN chown -R gotu-backend:gotu-backend .

# You can remove this install step if you build with `--bundle` option.
# The bundled output will include external dependencies.
#RUN npm --prefix gotu-backend --omit=dev -f install

#CMD [ "node", "gotu-backend" ]
