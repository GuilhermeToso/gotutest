name: Continuous Integration

on:
  push:
    branches:
      - main

jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-$${{ hashFiles('**/package-lock.json') }}

      - name: Use Nx Dev
        uses: nrwl/nx-set-shas@v3

      - name: Install dependencies and Test
        run: |
          npm ci
          npx nx affected -t test

      - name: Build and Store Docker images
        run: |
          # Define the list of application directories
          APP_DIRS=$(find . -type f -name 'Dockerfile' -exec dirname {} \; | grep '/apps/')

          # Iterate over the application directories and build Docker images
          for APP_DIR in $APP_DIRS; do
            IMAGE_NAME=$(basename "$APP_DIR")
            DOCKER_FILE=$APP_DIR/Dockerfile
            DOCKER_IMAGE=$IMAGE_NAME

            # Print the APP_DIR
            echo "Building Docker image in directory: $APP_DIR"

            # Build the Docker image
            docker build -t $DOCKER_IMAGE -f $DOCKER_FILE $APP_DIR

            # Save the Docker image to the 'docker' directory
            docker save -o $DOCKER_IMAGE.tar $DOCKER_IMAGE
          done

